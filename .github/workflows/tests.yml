name: Tests

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
      - develop

jobs:
  backend-tests:
    name: Run Backend Tests
    defaults:
      run:
        working-directory: backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Copy .env file
        run: |
          cp .env.ci .env
          cp .env.ci .env.testing

      - name: Install dependencies
        run: composer install --no-interaction

      - name: Run test suite
        run: php artisan test
        env:
          DB_DATABASE: cicd_testing

      - name: Run Larastan (PHPStan for Laravel)
        run: ./vendor/bin/phpstan analyse

      - name: Run Pint (Code Formatter)
        run: ./vendor/bin/pint --test

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: cicd_testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=5s --health-retries=3

  frontend-tests:
    name: Run Frontend Tests
    defaults:
      run:
        working-directory: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          cache-dependency-path: frontend/package-lock.json
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run Prettier
        run: npm run format -- --check

      - name: Run ESLint
        run: npm run lint